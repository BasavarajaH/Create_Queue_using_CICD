# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master



pool: Default

variables:
  AccessBearerToken:







stages:

  - stage: getcredential
    displayName: getcredential

    jobs:
      - job: getcredential
 
        steps:
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |

              $Url = "https://cloud.uipath.com/identity_/connect/token"

              $headers = @{
               "Content-Type" = 'application/json'

                         }


              
              $ABody = @{
               "client_id"= "83e73e47-a52e-4fe8-974e-caf45c99cfcd"
              "grant_type"='client_credentials'
              "scope"='OR.Queues OR.Machines'
              "client_secret"='$(Client_Secret)'

              }
              $Result = Invoke-RestMethod -Uri $Url -Method Post -Body $Abody
              ${env:AccessBearerToken}=$Result.access_token
              Write-Host "Access token:" "Bearer" ${env:AccessBearerToken}


  - stage: CreateQueue 
    displayName: Create Queue 
    dependsOn: getcredential
    condition: succeeded()
    jobs:
      - job: CreateQueue
        steps:
          - task: PowerShell@2
            inputs:
             targetType: 'inline'
             script: |
               
               $QUrl = "https://cloud.uipath.com/HPInc/ITG_Finance/odata/QueueDefinitions"
              
                $qBody = @{ 
                Name= "TestQueue_Azure1"
                Description= "Demo"
              
               }    

               $qBody=($qBody | ConvertTo-Json)  
               $Qheaders = @{
               Authorization = "Bearer ${env:AccessBearerToken}" 
               "X-UIPATH-TenantName" = 'ITG_Finance' 
               "X-UIPATH-OrganizationUnitId"='1271824'
                           }

               Write-Host "Access token" 'bearer' ${env:AccessBearerToken}
               $response = Invoke-RestMethod -Uri $QUrl -Method Post -ContentType "application/json" -Headers $Qheaders -Body $qBody
